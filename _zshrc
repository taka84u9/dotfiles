#----------------------------------------------------------#
#                                                          #
#                         $$\                              #
#                         $$ |                             #
#     $$$$$$$$\  $$$$$$$\ $$$$$$$\   $$$$$$\   $$$$$$$\    #
#     \____$$  |$$  _____|$$  __$$\ $$  __$$\ $$  _____|   #
#       $$$$ _/ \$$$$$$\  $$ |  $$ |$$ |  \__|$$ /         #
#      $$  _/    \____$$\ $$ |  $$ |$$ |      $$ |         #
#     $$$$$$$$\ $$$$$$$  |$$ |  $$ |$$ |      \$$$$$$$\    #
#     \________|\_______/ \__|  \__|\__|       \_______|   #
#                                                          #
#----------------------------------------------------------#

# This file sets up cli environment.

### Alias settings
setopt complete_aliases     # expand aliases before completing
## General
alias ll='ls -lh'
alias lla='ls -lhA'
alias la='ls -A'
alias lsd='ls -ld *(-/DN)'
alias df='df -h'
alias du='du -h'
alias sudo='env PATH=${PATH}:/sbin:/usr/sbin:/usr/local/sbin \sudo'
alias grep=egrep
alias h=history
alias j=jobs
alias ggp='git grep -H --heading --break'
alias glg='git log --graph --pretty="format:%C(yellow)%h%C(blue)%d%C(reset) %s %C(cyan)%an, %ar%C(reset)"'
alias gci='git commit -v'
alias gun='git reset HEAD~'
alias gco='git checkout'
alias gst='git status --short'
## Global alias
alias -g L='|less'
alias -g H='|head'
alias -g T='|tail'
alias -g G='|grep'
alias -g GI='|grep -i'
#alias tmux='tmux -u'
alias hg='hg --encoding=utf-8'
alias javac='javac -J-Dfile.encoding=UTF-8'
alias java='java -Dfile.encoding=UTF-8'
alias gcc='gcc -Wall -lstdc++'
alias less=vimpager
alias cat=vimcat
## os depending alias settings
case ${OSTYPE} in
darwin*) # Mac OS X
  alias ls='ls -GF'
  alias -s {png,jpg,bmp,PNG,JPG,BMP}='open -a Preview'
  ;;
linux*)
  alias ls='ls -F --color=auto'
  ;;
esac
function extract () {
  case $1 in
    *.tar.gz|*.tgz) tar xzvf $1;;
    *.tar.xz) tar Jxvf $1;;
    *.zip) unzip $1;;
    *.lzh) lha e $1;;
    *.tar.bz2|*.tbz) tar xjvf $1;;
    *.tar.Z) tar zxvf $1;;
    *.gz) gzip -dc $1;;
    *.bz2) bzip2 -dc $1;;
    *.Z) uncompress $1;;
    *.tar) tar xvf $1;;
    *.arj) unarj $1;;
  esac
}
alias -s {gz,tgz,zip,lzh,bz2,tbz,Z,tar,arj,xz}=extract


### misc. settings
export LESSCHARSET=utf-8
export OUTPUT_CHARSET=utf-8
umask 002            # default umask -> group writable
bindkey -e           # emacs like keybinding
# Backspace key
bindkey "^?" backward-delete-char

### Prompt configuration
autoload -U colors
REPORTTIME=3
colors

# Color
local DEFAULT=$'%{\e[1;0m%}'
local RESET="%{${reset_color}%}"
local GREEN="%{${fg[green]}%}"
local BLUE="%{${fg[blue]}%}"
local RED="%{${fg[red]}%}"
local CYAN="%{${fg[cyan]}%}"
local YELLOW="%{${fg[yellow]}%}"
local WHITE="%{${fg[white]}%}"
local GRAY="%{${fg[gray]}%}"
local BOLD_GREEN="%{${fg_bold[green]}%}"
local BOLD_BLUE="%{${fg_bold[blue]}%}"
local BOLD_RED="%{${fg_bold[red]}%}"
local BOLD_CYAN="%{${fg_bold[cyan]}%}"
local BOLD_YELLOW="%{${fg_bold[yellow]}%}"
local BOLD_WHITE="%{${fg_bold[white]}%}"
local BOLD_GRAY="%{${fg_bold[gray]}%}"

RPROMPT="%T"
setopt transient_rprompt
function precmd () {
  PROMPT="${GREEN}%n${RESET}@${BLUE}%m${YELLOW} %~${RESET} "
  st=`git status 2>/dev/null`
  if [ $? ] ; then
    if [[ -n `echo "$st" | grep "^nothing to"` ]] ; then
      color=$CYAN
    elif [[ -n `echo "$st" | grep "^nothing added"` ]] ; then
      color=$BLUE
    elif [[ -n `echo "$st" | grep "^# Untracked"` ]] ; then
      color=$BOLD_RED
    else
      color=$RED
    fi
    PROMPT+="$color$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1 /')%b${RESET}"
  fi
}

# No beep
set bell-style none; setopt nobeep; setopt nolistbeep

setopt prompt_subst         # Use escape sequences
setopt interactive_comments # Ignore commands following # in cui
setopt no_flow_control      # Disable C-s and C-q
setopt print_eight_bit      # Enable Japanese file name

# NOCLOBBER prevents accidentally overwriting an existing file.
# To really clobber a file, use the >! operator.
setopt noclobber

# C-w deletes the caractor next to the /
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

export LS_COLORS='di=01;36' # Show direcotry in water color

# Automatically escape URL string
autoload -Uz url-quote-magic; zle -N self-insert url-quote-magic

# Colorize
export ZLS_COLORS=$LS_COLORS
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

setopt noautoremoveslash    # Don't automatically remove / on the tail


# MySQL
#export MYSQL_PS1='(^[[32m\u^[[00m@^[[33m\h^[[00m) ^[[34m[\d]^[[00m > '


### History settings
HISTFILE=$HOME/.zsh-history # history file
HISTSIZE=10000              # number of saved history on memory
SAVEHIST=10000              # number of saved history
setopt hist_ignore_dups     # ignore duplicated history
setopt hist_reduce_blanks   # strip white spaces
setopt hist_no_store        # ignore history command
setopt hist_ignore_space    # ignore command starts with white spaces
setopt extended_history     # current time is also saved
setopt share_history        # share history across multi processes
setopt append_history
setopt inc_append_history
setopt hist_verify          # can edit history before execute it
# short cut
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end
# incremental search
bindkey "^R" history-incremental-search-backward
bindkey "^S" history-incremental-search-forward
function history-all () { history -E 1 }

### misc. settings

# colorize less
if [ -x "${HOME}/.source-highlight/src-hilite-lesspipe.sh" ]; then
  export LESS='-R'
  export LESSOPEN="| $HOME/.source-highlight/src-hilite-lesspipe.sh %s"
fi

setopt no_hup               # Keep processs when logging out
setopt checkjobs            # Check background job when logging out
setopt notify               # Immediately notify when backgroung job finishes
setopt auto_cd              # Change direcroty with it's name
setopt auto_pushd           # Execute pushd command when current directory is
                            # changed by cd command
setopt pushd_ignore_dups    # Make pushd command ignore duplicated directories

export GREP_OPTIONS='--color=auto'

### Completion settings
# Use full complement functionality
autoload -Uz compinit; compinit
setopt auto_menu            # Toggle complement candidates using TAB
setopt auto_list            # Show all candidates
setopt magic_equal_subst    # Even option args are complemented
setopt auto_param_slash     # Insert / after a complemented directory name
setopt list_packed          # Use compackt style candidates viewer mode
setopt list_types           # Show kinds of file using marks
setopt correct              # Do spell check
# Can use Emacs style keybind to select candidates
zstyle ':completion:*:default' menu select=1
# Complement process name with kill command
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([%0-9]#)*=0=01;31'
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin/bin
# Don't show current directory
zstyle ':completion:*' ignore-parents parent pwd


### Python settings
export NOSE_REDNOSE=1
export PYTHONSTARTUP=$HOME/.pythonrc

### Perl settings
export PERL_BADLANG=0

# Extra zshrc files

#fpath=($DOTFILES/modules/zsh-completions $fpath)
[ -f $DOTFILES/git-completion.bash ] && source $DOTFILES/git-completion.bash
[ -f $DOTFILES/modules/zaw/zaw.zsh ] && source $DOTFILES/modules/zaw/zaw.zsh
[ -f $DOTFILES/modules/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ] && source $DOTFILES/modules/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#source $DOTFILES/modules/auto-fu.zsh/auto-fu.zsh
#zle-line-init () {auto-fu-init;}; zle -N zle-line-init
#zstyle ':completion:*' completer _oldlist _complete
#zle -N zle-keymap-select auto-fu-zle-keymap-select

# local settings
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

typeset -U path cdpath fpath manpath

# vim: set filetype=zsh :

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
