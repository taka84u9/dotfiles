#!/usr/bin/env ruby

require 'date'
require 'git'
require 'octokit'

remote_name = ARGV[1] || 'origin'

git = Git.open('./')
remote = git.remotes.select { |r| r.name == remote_name }.first
repo =
  if (match = remote.url.match(%r{^git@[^:]+:(?<repo>.+)\.git}))
    match['repo']
  elsif (match = remote.url.match(%r{^https://[^/]+/(?<repo>.+)\.git}))
    match['repo']
  end
exit 1 unless repo

url_to_detail = {}

Octokit::Client.new(netrc: true).user_events('yuku-t').each do |_|
  break unless _.created_at.getlocal.to_date == Time.now.to_date
  case _.type
  when 'IssuesEvent'
    url_to_detail[_.payload.issue.html_url] ||= { title: _.payload.issue.title, comments: [] }
  when 'IssueCommentEvent'
    url_to_detail[_.payload.issue.html_url] ||= { title: _.payload.issue.title, comments: [] }
    url_to_detail[_.payload.issue.html_url][:comments] << _.payload.comment.html_url
  when 'PullRequestEvent'
    url_to_detail[_.payload.pull_request.html_url] ||= { title: _.payload.pull_request.title, comments: [] }
  end
end

url_to_detail.each do |url, detail|
  puts "* [#{detail[:title]}](#{url})"
  detail[:comments].reverse.each do |comment|
    puts "    * #{comment}"
  end
end
